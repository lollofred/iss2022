/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7.1/samples
 */
plugins {
    id 'java'
    id 'eclipse'
    id 'application'
	id 'jacoco'
}
repositories {
    jcenter()
    flatDir { dirs '../unibolibs' }
    flatDir { dirs './libs' }
}

version '1.1'
sourceCompatibility = 1.8

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    
//KOTLIN
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.6.10'
//COROUTINE
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-common', version: '1.3.8'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.6.0'

//MQTT (required by actors)
	implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'
//COAP (required by actors)
	// https://mvnrepository.com/artifact/org.eclipse.californium/californium-core
	implementation group: 'org.eclipse.californium', name: 'californium-core', version: '2.0.0-M12'
	// https://mvnrepository.com/artifact/org.eclipse.californium/californium-proxy
	implementation group: 'org.eclipse.californium', name: 'californium-proxy', version: '2.0.0-M12'


//JSON
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20160810'

//CUSTOM unibo
    implementation name: '2p301'
    implementation name: 'uniboInterfaces'
    implementation name: 'unibonoawtsupports'
	implementation name: 'it.unibo.qakactor-2.7'
	
	//RADAR (support and GUI)
	implementation name: 'radarPojo'
	// https://mvnrepository.com/artifact/org.pushingpixels/trident
	implementation group: 'org.pushingpixels', name: 'trident', version: '1.3'

//RadarSystem
	implementation name: 'it.unibo.radarSystem22.domain-1.0'

}

sourceSets {
    main.java.srcDirs += 'src'
    main.java.srcDirs += 'resources'
    main.java.srcDirs += 'test' //main clas RSActor22onRasp.java in test
    test.java.srcDirs += 'test'
}

//Avoid duplication of src in Eclipse
eclipse {
    classpath {
        sourceSets -= [sourceSets.main, sourceSets.test]
    }
}

mainClassName = 'unibo.actor22.local.RSActor22onRasp'          //everithing local on the raspberry
//mainClassName = 'unibo.actor22.distrib.RSActor22Distrib_rasp'    //LedActor and SonarActor on raspberry, Controller on PC


jar {
    from sourceSets.main.allSource
    manifest { attributes 'Main-Class': "$mainClassName" }
}


distributions {
    main {
        contents {
            //from './RadarSystemConfig.json'
        }
    }
}

/*
./gradlew distTar
./gradlew distTar -x test
*/
/*
IP=192.168.1.115
TARNAME=unibo.actor22-1.1
DEPLOY_DIRNAME=unibo_actor
PROJECT_NAME=unibo.actor22

ssh pi@$IP "mkdir -p loris-radar/$DEPLOY_DIRNAME"
ssh pi@$IP "rm -f loris-radar/$DEPLOY_DIRNAME/$TARNAME.tar"
scp /home/loris/Desktop/lorisIssLab2022/$PROJECT_NAME/build/distributions/$TARNAME.tar pi@$IP:"loris-radar/$DEPLOY_DIRNAME/$TARNAME.tar"
ssh pi@$IP "rm -rf loris-radar/$DEPLOY_DIRNAME/$TARNAME"
ssh pi@$IP "tar -C loris-radar/$DEPLOY_DIRNAME/ -xvpf loris-radar/$DEPLOY_DIRNAME/$TARNAME.tar"
ssh pi@$IP "cp ~/loris-radar/bin_executables/{SonarAlone,led25GpioTurnOff.sh,led25GpioTurnOn.sh} ~/loris-radar/$DEPLOY_DIRNAME/$TARNAME/bin"
ssh pi@$IP "cd ~/loris-radar/$DEPLOY_DIRNAME/$TARNAME/bin; ~/loris-radar/$DEPLOY_DIRNAME/$TARNAME/bin/$PROJECT_NAME"
*/

/*
sudo ss -ntlp
build/scripts/deploy.sh

git rm --cached .project
git rm --cached .classpath
*/ 